<?xml version="1.0" encoding="UTF-8"?>
<mapping namespace="xbuilder.reportManager">
	<!--报表管理 start  -->
	<sql name="reportStateList">
		<![CDATA[
			SELECT * FROM (
				select  '-1' AS "CODE", '全部' AS "CODE_DESC",1 AS "ORD" union all
				select  '0' AS "CODE", '保存' AS "CODE_DESC",2 AS "ORD"  union all
				select  '3' AS "CODE", '发布' AS "CODE_DESC",3 AS "ORD"  union all
				select  '1' AS "CODE", '上架' AS "CODE_DESC",4 AS "ORD"  union all
				select  '2' AS "CODE", '下架' AS "CODE_DESC",5 AS "ORD"  union all
				select  '4' AS "CODE", '暂存' AS "CODE_DESC",6 AS "ORD"  
			) t	order by "ORD"
		]]>
	</sql>
	
	<sql name="reportStateListWithXSaveMode">
		<![CDATA[
			SELECT * FROM (
				select  '-1' AS "CODE", '全部' AS "CODE_DESC",1 AS "ORD" union all
				select  '0' AS "CODE", '保存' AS "CODE_DESC",2 AS "ORD"  union all
				select  '3' AS "CODE", '发布' AS "CODE_DESC",3 AS "ORD"  union all
				select  '1' AS "CODE", '上架' AS "CODE_DESC",4 AS "ORD"  union all
				select  '2' AS "CODE", '下架' AS "CODE_DESC",5 AS "ORD"  union all
				select  '4' AS "CODE", '暂存' AS "CODE_DESC",6 AS "ORD"  
			) t WHERE "CODE" not in('4')
			order by "ORD"
		]]>
	</sql>
	
	<sql name="reportList">
		<![CDATA[
			SELECT R.ID AS "REPORT_ID",
		       COALESCE(R.NAME,'正在编译') AS "REPORT_NAME",
		        CASE WHEN R.STATE='0' THEN '保存'
		       	    WHEN R.STATE='1' THEN '上架'
		       	    WHEN R.STATE='2' THEN '下架'
                 WHEN R.STATE='3' THEN '发布'
                 WHEN R.STATE='4' THEN '暂存'
                 ELSE '--' END AS "STATE",
           CASE WHEN COALESCE(TOTAL,0)=0 AND R.STATE != '4' THEN '0' ELSE R.STATE END AS "OLD_STATE",
          R.STATE AS "INFACT_STATE",
           COALESCE(T.USER_NAME,'--') AS "CREATOR_NAME",
           COALESCE(R.CREATE_TIME,'--') AS "CREATE_DATE",
           COALESCE(T1.USER_NAME,'--') AS "UPDATOR_NAME",
           COALESCE(R.MODIFY_TIME,'--') AS "UPDATE_DATE",
           COALESCE(M.PUBLISH_DATE,'--') AS "PUBLISH_DATE",
           COALESCE(M.USER_NAME, '--') AS "PUBLISH_USERNAME",
           COALESCE(TOTAL,0) AS "TOTAL",
           COALESCE(M.NAME,'--') AS "MENU_NAME",
           R.URL AS "URL",
           R.CREATE_USER AS "CREATE_USER"
		  from x_report_info r LEFT JOIN (select user_id, user_name from e_user) t on r.create_user = t.user_id
		 	   LEFT JOIN  (select user_id, user_name from e_user) t1 on r.modify_user = t1.user_id
		 	   left join 
				   (
				   	  select * from 
					   	 ( select mr.*,
					       (select count(1)
					          from x_report_menu_rel rr, e_menu mm
					         where rr.menu_id = mm.resources_id
					           and rr.report_id = mr.report_id
					         group by rr.report_id) total,
					       mn.id,
					       mn.name
					       
				 		from x_report_menu_rel mr left join (SELECT RESOURCES_ID "id",
													               concat('菜单名称：',RESOURCES_NAME) "name"
													          	FROM e_menu)  mn on mr.MENU_ID = mn.id
				   		 where publish_date in (select max(publish_date)
				                          from x_report_menu_rel rmr, e_menu m
				                         where rmr.menu_id = m.resources_id
				                         group by report_id)
				         ) m1 left join  (select user_id, user_name from e_user) t2  on m1.publish_users = t2.user_id
			       ) m 
			  on r.id=m.report_id
		  where 1=1
			{ and r.name like '%'||#report_name#||'%' }
			{ and r.id like '%'||#report_id#||'%' }
			{ and t.user_name like '%'||#creator_name#||'%'}
			{ and m.name like '%'||#menu_name#||'%'}
			{ and r.state = (case when #state#='-1' then r.state else '%{state}' end)}
			{ and r.create_time like replace(#create_date#,'-','') || '%'}
			{ and r.modify_time like replace(#update_date#,'-','') || '%'}
		order by r.CREATE_TIME desc 
		]]>
	</sql>
	<sql name="reportListWithXSavedMode">
		<![CDATA[
			SELECT R.ID AS "REPORT_ID",
		       COALESCE(R.NAME,'正在编译') AS "REPORT_NAME",
		        CASE WHEN R.STATE='0' THEN '保存'
		       	    WHEN R.STATE='1' THEN '上架'
		       	    WHEN R.STATE='2' THEN '下架'
                 WHEN R.STATE='3' THEN '发布'
                 WHEN R.STATE='4' THEN '暂存'
                 ELSE '--' END AS "STATE",
           CASE WHEN COALESCE(TOTAL,0)=0 AND R.STATE != '4' THEN '0' ELSE R.STATE END AS "OLD_STATE",
          R.STATE AS "INFACT_STATE",
           COALESCE(T.USER_NAME,'--') AS "CREATOR_NAME",
           COALESCE(R.CREATE_TIME,'--') AS "CREATE_DATE",
           COALESCE(T1.USER_NAME,'--') AS "UPDATOR_NAME",
           COALESCE(R.MODIFY_TIME,'--') AS "UPDATE_DATE",
           COALESCE(M.PUBLISH_DATE,'--') AS "PUBLISH_DATE",
           COALESCE(M.USER_NAME, '--') AS "PUBLISH_USERNAME",
           COALESCE(TOTAL,0) AS "TOTAL",
           COALESCE(M.NAME,'--') AS "MENU_NAME",
           R.URL AS "URL",
           R.CREATE_USER AS "CREATE_USER"
		  from x_report_info r LEFT JOIN (select user_id, user_name from e_user) t on r.create_user = t.user_id
		 	   LEFT JOIN  (select user_id, user_name from e_user) t1 on r.modify_user = t1.user_id
		 	   left join 
				   (
				   	  select * from 
					   	 ( select mr.*,
					       (select count(1)
					          from x_report_menu_rel rr, e_menu mm
					         where rr.menu_id = mm.resources_id
					           and rr.report_id = mr.report_id
					         group by rr.report_id) total,
					       mn.id,
					       mn.name
					       
				 		from x_report_menu_rel mr left join (SELECT RESOURCES_ID "id",
													               concat('菜单名称：',RESOURCES_NAME) "name"
													          	FROM e_menu)  mn on mr.MENU_ID = mn.id
				   		 where publish_date in (select max(publish_date)
				                          from x_report_menu_rel rmr, e_menu m
				                         where rmr.menu_id = m.resources_id
				                         group by report_id)
				         ) m1 left join  (select user_id, user_name from e_user) t2  on m1.publish_users = t2.user_id
			       ) m 
			  on r.id=m.report_id
		  where 1=1 
			{ and r.name like '%'||#report_name#||'%' }
			{ and r.id like '%'||#report_id#||'%' }
			{ and t.user_name like '%'||#creator_name#||'%'}
			{ and m.name like '%'||#menu_name#||'%'}
			{ and r.state = (case when #reportState#='-1' then r.state else '%{reportState}' end)}
			{ and r.create_time like replace(#create_date#,'-','') || '%'}
			{ and r.modify_time like replace(#update_date#,'-','') || '%'}
			and r.state not in('4')
		order by r.CREATE_TIME desc 
		]]>
	</sql>
	
	<sql name="reportListAccount">
		<![CDATA[
			SELECT R.ID AS "REPORT_ID",
		       COALESCE(R.NAME,'正在编译') AS "REPORT_NAME",
		        CASE WHEN R.STATE='0' THEN '保存'
		       	    WHEN R.STATE='1' THEN '上架'
		       	    WHEN R.STATE='2' THEN '下架'
                 WHEN R.STATE='3' THEN '发布'
                 WHEN R.STATE='4' THEN '暂存'
                 ELSE '--' END AS "STATE",
           CASE WHEN COALESCE(TOTAL,0)=0 AND R.STATE != '4' THEN '0' ELSE R.STATE END AS "OLD_STATE",
          R.STATE AS "INFACT_STATE",
           COALESCE(T.USER_NAME,'--') AS "CREATOR_NAME",
           COALESCE(R.CREATE_TIME,'--') AS "CREATE_DATE",
           COALESCE(T1.USER_NAME,'--') AS "UPDATOR_NAME",
           COALESCE(R.MODIFY_TIME,'--') AS "UPDATE_DATE",
           COALESCE(M.PUBLISH_DATE,'--') AS "PUBLISH_DATE",
           COALESCE(M.USER_NAME, '--') AS "PUBLISH_USERNAME",
           COALESCE(TOTAL,0) AS "TOTAL",
           COALESCE(M.NAME,'--') AS "MENU_NAME",
           R.URL AS "URL",
           R.CREATE_USER AS "CREATE_USER"
		  from x_report_info r LEFT JOIN (select user_id, user_name from e_user) t on r.create_user = t.user_id
		 	   LEFT JOIN  (select user_id, user_name from e_user) t1 on r.modify_user = t1.user_id
		 	   left join 
				   (
				   	  select * from 
					   	 ( select mr.*,
					       (select count(1)
					          from x_report_menu_rel rr, e_menu mm
					         where rr.menu_id = mm.resources_id
					           and rr.report_id = mr.report_id
					         group by rr.report_id) total,
					       mn.id,
					       mn.name
					       
				 		from x_report_menu_rel mr left join (SELECT RESOURCES_ID "id",
													               concat('菜单名称：',RESOURCES_NAME) "name"
													          	FROM e_menu)  mn on mr.MENU_ID = mn.id
				   		 where publish_date in (select max(publish_date)
				                          from x_report_menu_rel rmr, e_menu m
				                         where rmr.menu_id = m.resources_id
				                         group by report_id)
				         ) m1 left join  (select user_id, user_name from e_user) t2  on m1.publish_users = t2.user_id
			       ) m 
			  on r.id=m.report_id
		  where 1=1
		    and (r.create_user = #session.UserInfo.USER_ID#
		      or r.create_user in (select USER_ID
								  from E_USER_ACCOUNT
								 WHERE ACCOUNT_CODE IN
								       (select ACCOUNT_CODE from E_USER_ACCOUNT where user_id = #session.UserInfo.USER_ID#)))
		    
			{ and r.name like '%'||#report_name#||'%' }
			{ and r.id like '%'||#report_id#||'%' }
			{ and t.user_name like '%'||#creator_name#||'%'}
			{ and m.name like '%'||#menu_name#||'%'}
			{ and r.state = (case when #state#='-1' then r.state else '%{state}' end)}
			{ and r.create_time like replace(#create_date#,'-','') || '%'}
			{ and r.modify_time like replace(#update_date#,'-','') || '%'}
		order by r.CREATE_TIME desc 
		]]>
	</sql>
	<sql name="reportListWithXSavedModeAccount">
		<![CDATA[
			SELECT R.ID AS "REPORT_ID",
		       COALESCE(R.NAME,'正在编译') AS "REPORT_NAME",
		        CASE WHEN R.STATE='0' THEN '保存'
		       	    WHEN R.STATE='1' THEN '上架'
		       	    WHEN R.STATE='2' THEN '下架'
                 WHEN R.STATE='3' THEN '发布'
                 WHEN R.STATE='4' THEN '暂存'
                 ELSE '--' END AS "STATE",
           CASE WHEN COALESCE(TOTAL,0)=0 AND R.STATE != '4' THEN '0' ELSE R.STATE END AS "OLD_STATE",
          R.STATE AS "INFACT_STATE",
           COALESCE(T.USER_NAME,'--') AS "CREATOR_NAME",
           COALESCE(R.CREATE_TIME,'--') AS "CREATE_DATE",
           COALESCE(T1.USER_NAME,'--') AS "UPDATOR_NAME",
           COALESCE(R.MODIFY_TIME,'--') AS "UPDATE_DATE",
           COALESCE(M.PUBLISH_DATE,'--') AS "PUBLISH_DATE",
           COALESCE(M.USER_NAME, '--') AS "PUBLISH_USERNAME",
           COALESCE(TOTAL,0) AS "TOTAL",
           COALESCE(M.NAME,'--') AS "MENU_NAME",
           R.URL AS "URL",
           R.CREATE_USER AS "CREATE_USER"
		  from x_report_info r LEFT JOIN (select user_id, user_name from e_user) t on r.create_user = t.user_id
		 	   LEFT JOIN  (select user_id, user_name from e_user) t1 on r.modify_user = t1.user_id
		 	   left join 
				   (
				   	  select * from 
					   	 ( select mr.*,
					       (select count(1)
					          from x_report_menu_rel rr, e_menu mm
					         where rr.menu_id = mm.resources_id
					           and rr.report_id = mr.report_id
					         group by rr.report_id) total,
					       mn.id,
					       mn.name
					       
				 		from x_report_menu_rel mr left join (SELECT RESOURCES_ID "id",
													               concat('菜单名称：',RESOURCES_NAME) "name"
													          	FROM e_menu)  mn on mr.MENU_ID = mn.id
				   		 where publish_date in (select max(publish_date)
				                          from x_report_menu_rel rmr, e_menu m
				                         where rmr.menu_id = m.resources_id
				                         group by report_id)
				         ) m1 left join  (select user_id, user_name from e_user) t2  on m1.publish_users = t2.user_id
			       ) m 
			  on r.id=m.report_id
		  where 1=1
		    and (r.create_user = #session.UserInfo.USER_ID#
		      or r.create_user in (select USER_ID
								  from E_USER_ACCOUNT
								 WHERE ACCOUNT_CODE IN
								       (select ACCOUNT_CODE from E_USER_ACCOUNT where user_id = #session.UserInfo.USER_ID#)))
			{ and r.name like '%'||#report_name#||'%' }
			{ and r.id like '%'||#report_id#||'%' }
			{ and t.user_name like '%'||#creator_name#||'%'}
			{ and m.name like '%'||#menu_name#||'%'}
			{ and r.state = (case when #state#='-1' then r.state else '%{state}' end)}
			{ and r.create_time like replace(#create_date#,'-','') || '%'}
			{ and r.modify_time like replace(#update_date#,'-','') || '%'}
			and r.state not in('4')
		order by r.CREATE_TIME desc 
		]]>
	</sql>
	
	<sql name="currentReportCount">
		<![CDATA[
			select count(1) AS "TOTAL"
			  from e_menu m, x_report_menu_rel r
			 where r.menu_id = m.resources_id
			   and m.parent_id = #parent_id#
			   and r.report_id = #report_id#
		]]>
	</sql>
	<sql name="menuListWhenIdIsNull">
		<![CDATA[
			select resources_id AS "id",
			       resources_name AS "text",
			       null AS "_parentId",
			       'closed' AS "state"
			  from e_menu
			 where resources_id = '0'
		]]>
	</sql>
	<sql name="menuListWhenIdIsNotNull">
		<![CDATA[
			select t.resources_id AS "id",
			       t.resources_name AS "text",
			       '%{param.id}' AS "_parentId",
			       case when (select count(1)
			                 from e_menu m
			                where m.parent_id = t.resources_id) > 0 then
			          'closed'
			         else
			          'leaf'
			       end AS "state"
			  from e_menu t
			 where t.parent_id = #id#
			   and t.resources_id in
			       (select menu_id
			          from e_user_permission
			         where user_id = #session.UserInfo.USER_ID#
			           and auth_read = 1
			        union
			        select a.menu_id
			          from e_user_role b left join e_role_permission a on a.role_code = b.role_code
			         where b.user_id = #session.UserInfo.USER_ID#
			           and a.auth_read = 1)

		]]>
	</sql>
	<sql name="menuIdObj">
		<![CDATA[
			select nextval('E_M_SEQ') AS "MENU_ID_VALUE"
		]]>
	</sql>
	<sql name="insertMenu">
		<![CDATA[
			insert into e_menu(resources_id, resources_name, resources_type, parent_id, url,ord) values('%{menuIdObj.MENU_ID_VALUE }', #resources_name#, '1', #parent_id#, #url#,'1')
		]]>
	</sql>
	<sql name="insertMenuUserPermission">
		<![CDATA[
			insert into e_user_permission
			  (user_id, menu_id, auth_create, auth_read, auth_update, auth_delete,AUTH_EXPORT) values(#session.UserInfo.USER_ID#, '%{menuIdObj.MENU_ID_VALUE }', 1, 1, 1, 1,1)
		]]>
	</sql>
	<sql name="insertMenuReportRel">
		<![CDATA[
			insert into x_report_menu_rel  (report_id, menu_id, publish_users, publish_username, publish_date)  values(#report_id#, '%{menuIdObj.MENU_ID_VALUE }', #session.UserInfo.USER_ID#, #session.UserInfo.USER_NAME#, #time()#)
		]]>
	</sql>
	<sql name="updateReportState">
		<![CDATA[
			update x_report_info set state='1' where id=#report_id#
		]]>
	</sql>
	
	<sql name="deleteReport">
		<![CDATA[
			delete from x_report_info where id=#report_id#
		]]>
	</sql>
	<sql name="deleteReportDim">
		<![CDATA[
			delete from x_report_var_dim where report_id=#report_id#
		]]>
	</sql>
	<sql name="deleteReportUserPermission">
		<![CDATA[
			delete from e_user_permission where menu_id in (select menu_id from x_report_menu_rel where report_id = #report_id#)
		]]>
	</sql>
	<sql name="deleteMenu">
		<![CDATA[
			delete from e_menu where  resources_id  in (select menu_id from x_report_menu_rel where report_id = #report_id#)
		]]>
	</sql>
	<sql name="deleteReportMenuRel">
		<![CDATA[
			delete from x_report_menu_rel where report_id =#report_id#
		]]>
	</sql>
	<sql name="deleteReportColumns">
		<![CDATA[
			delete from x_report_columns where report_sql_id in (select report_sql_id from x_report_sql where report_id = #report_id#)
		]]>
	</sql>
	<sql name="deleteReportSql">
		<![CDATA[
			delete from x_report_sql where report_id=#report_id#
		]]>
	</sql>
	<sql name="deleteReportDescribe">
		<![CDATA[
			DELETE FROM x_report_describe T  WHERE T.REPORT_ID=#report_id#
		]]>
	</sql>
	<sql name="deleteReportDuiBiao">
		<![CDATA[
			DELETE FROM x_REPORT_DUIBIAO T WHERE T.REPORT_ID=#report_id#
		]]>
	</sql>
	
	<sql name="fileList">
		<![CDATA[
			SELECT USER_ID AS "USER_ID", CREATE_TIME AS "CREATE_TIME", FILE_PATH AS "FILE_PATH", FILE_NAME AS "FILE_NAME", REPORT_ID AS "REPORT_ID"
			  FROM x_REPORT_FILE
			 WHERE REPORT_ID = #reportId#
			 ORDER BY ID DESC
		]]>
	</sql>
	<sql name="addFileInFileList">
		<![CDATA[
			INSERT INTO x_REPORT_FILE
				  (ID, USER_ID, CREATE_TIME, FILE_PATH, FILE_NAME,REPORT_ID)
				VALUES
				  ('%{tempfileName}',
				   '%{sessionScope.UserInfo.LOGIN_ID}',
				   #time()#,
				   '%{filePath}',
				   '%{initFileName}',
				   '%{reportId}')
		]]>
	</sql>
	
	<sql name="deleteFileInFileList">
		<![CDATA[
			DELETE FROM x_REPORT_FILE WHERE FILE_PATH=#filePath#
		]]>
	</sql>
	
	<sql name="updateReportStateTo2">
		<![CDATA[
			update x_report_info set state='2' where id=#report_id#
		]]>
	</sql>
	
	<sql name="discribeInfo">
		<![CDATA[
		select user_id AS "user_id",report_man AS "user_name", depart_code AS "department_code",
				   depart_desc AS "department_desc",report_desc AS "report_desc",report_id AS "report_id" , b.name AS "words"
				   from x_report_describe a , x_report_info b
				   where a.report_id = b.id 
				   and report_id=#report_id# 
		]]>
	</sql>
	<sql name="discribeUserList">
		<![CDATA[
			SELECT USER_ID AS "USER_ID", USER_NAME AS "USER_NAME" FROM E_USER
       		WHERE 1=1
			 {and user_name like '%'||#userName#||'%'}
		]]>
	</sql>
	
	<sql name="discribeDepartListWhenIdIsNull">
		<![CDATA[
			select depart_code AS "id",
		             depart_desc AS "text",
		             parent_code AS "_parentId",
		             case
		               when (select count(1) c
		                       from e_department dd
		                      where dd.parent_code = d.depart_code) = 0 then
		                'leaf'
		               else
		                'closed'
		             end AS "state"
		        from e_department d
		       where (parent_code is null or parent_code = '0')
		]]>
	</sql>
	
	<sql name="discribeDepartListWhenIdIsNotNull">
		<![CDATA[
			select depart_code AS "id",
					       depart_desc AS "text",
					       parent_code AS "_parentId",
					       case
					         when (select count(1) c
				                   from e_department dd
		                      where dd.parent_code = d.depart_code) = 0 then
		                'leaf'
		               else
		                'closed'
		             end AS "state"
		        from e_department d
		       where parent_code = #id#
		]]>
	</sql>
	
	<sql name="reportIdInDiscribe">
		<![CDATA[
			select t.REPORT_ID AS "REPORT_ID" from x_report_describe t where t.report_id = #report_id#
		]]>
	</sql>
	
	<sql name="updateReportName">
		<![CDATA[
			UPDATE x_report_info SET NAME =#words# where id = #report_id#
		]]>
	</sql>
	
	<sql name="insertReportDiscribe">
		<![CDATA[
			insert into x_report_describe(report_id,user_id,report_man,depart_code,depart_desc,report_desc)
							values(#report_id#,#user_id#,#user_name#,#department_code#,#department_desc#,#report_desc#)
		]]>
	</sql>
	
	<sql name="updateReportDiscribe">
		<![CDATA[
			update x_report_describe set   user_id=#user_id#,
										   report_man=#user_name#,
										   depart_code=#department_code#,
										   depart_desc=#department_desc#,
										   report_desc=#report_desc#
								 where report_id=#report_id#
		]]>
	</sql>
	
	<!-- 授权 start -->
	<sql name="allRoleList">
		<![CDATA[
			SELECT (case when (select count(1) from E_ROLE where PARENT_CODE=t.ROLE_CODE) >0 then '0' else '1' end) AS "ISLEAF",
				       ROLE_CODE AS "ROLE_CODE",
				       ROLE_NAME AS "ROLE_NAME",
				       PARENT_CODE AS "PARENT_CODE"
				  FROM E_ROLE T ORDER BY T.ORD
		]]>
	</sql>
	<sql name="hasOwnRoleList">
		<![CDATA[
		SELECT ROLE_CODE AS "ROLE_CODE", ROLE_NAME AS "ROLE_NAME", PARENT_CODE AS "PARENT_CODE", ORD AS "ORD"
			  FROM e_role T
			 where T.role_code in
			       (SELECT ROLE_CODE
			          FROM E_USER_ROLE
			         WHERE USER_ID in
			               (select USER_ID
			                  from E_USER_ACCOUNT
			                 WHERE ACCOUNT_CODE IN
			                       (select ACCOUNT_CODE
			                          from E_USER_ACCOUNT
			                         where user_id = #userId#)))
		  order by role_code desc
		]]>
	</sql>
	
	<sql name="menuObjForEditMenuRole">
		<![CDATA[
			select MENU_ID AS "MENU_ID" from X_REPORT_MENU_REL WHERE REPORT_ID=#formId#
		]]>
	</sql>
	<sql name="userObjForEditMenuRole">
		<![CDATA[
			select USER_NAME AS "USER_NAME", LOGIN_ID AS "LOGIN_ID" from e_user where user_id=#userId#
		]]>
	</sql>
	<sql name="deleteRolePermissionForEditMenuRole">
		<![CDATA[
			delete E_ROLE_PERMISSION where role_code=#roleId# and MENU_ID=#menuId#
		]]>
	</sql>
	<sql name="roleObjForEditMenuRole">
		<![CDATA[
			select ROLE_NAME AS "ROLE_NAME" from e_role where role_code=#roleId#
		]]>
	</sql>
	<sql name="insertLogForEditMenuRole">
		<![CDATA[
			insert into E_OPERATION_LOG(USER_ID,MENU_ID,OPERATE_TYPE_CODE,OPERATE_RESULT,CONTENT,CLIENT_IP,CREATE_DATE) VALUES(#userId#,#menuId#,'4','1','用户　'||#userName#||'('||#loginId#||')'||' 菜单'||'('||#formName#||')'||'删除角色　'||#roleName#||'('||#roleId#||')',#ip#,#currentTime#)
		]]>
	</sql>
	<sql name="insertRolePermissionForEditMenuRole">
		<![CDATA[
			INSERT INTO E_ROLE_PERMISSION(ROLE_CODE,MENU_ID,AUTH_CREATE,AUTH_READ,AUTH_UPDATE,AUTH_DELETE,AUTH_EXPORT)
								values(#roleId#,#menuId#,'0','1','0','0','1')
		]]>
	</sql>
	<!-- 授权 end -->
	
	
	<!--报表管理 end 
	-->
</mapping>



